{"ast":null,"code":"var _jsxFileName = \"/home/miso/Documents/Learning_Projects/Complete React Developer in 2020/crwn-clothing/client/src/App.js\";\nimport React, { useEffect } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport './App.css';\nimport HomePage from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop/shop.component';\nimport SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component';\nimport CheckoutPage from './pages/checkout/checkout.component';\nimport Header from './components/header/header.component'; // BEFORE SAGAS \n// import { auth, createUserProfileDocument } from './firebase/firebase.utils';\n// import { setCurrentUser } from './redux/user/user.actions';\n\nimport { selectCurrentUser } from './redux/user/user.selectors';\nimport { checkUserSession } from './redux/user/user.actions';\n\nconst App = ({\n  checkUserSession\n}) => {\n  // unsubsribeFromAuth = null;\n  // Using HOOKS - useEffect\n  // componentDidMount() {\n  //   const { checkUserSession } = this.props;\n  //   checkUserSession();\n  // BEFORE SAGAS. SWITCHED TO SAGAS\n  //   const { setCurrentUser } = this.props;\n  // WONT BE USING THIS. WE ARE SWITCHING TO SAGAS\n  // this.unsubsribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n  //   if (userAuth) {\n  //     const userRef = await createUserProfileDocument(userAuth);\n  //     userRef.onSnapshot(snapShot => {\n  //       setCurrentUser({\n  //         id: snapShot.id,\n  //         ...snapShot.data()\n  //       })\n  //     });\n  // }\n  useEffect(() => checkUserSession(), [checkUserSession]); //   setCurrentUser(userAuth);\n  // });\n  // }\n  // componentWillUnmount() {\n  //   this.unsubsribeFromAuth();\n  // }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: HomePage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/shop\",\n    component: ShopPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/checkout\",\n    component: CheckoutPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/signin\",\n    render: () => this.props.currentUser ? React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }) : React.createElement(SignInAndSignUpPage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n});\n\nconst mapDispatchToProps = dispatch => ({\n  // setCurrentUser: user => dispatch(setCurrentUser(user))\n  checkUserSession: () => dispatch(checkUserSession())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/home/miso/Documents/Learning_Projects/Complete React Developer in 2020/crwn-clothing/client/src/App.js"],"names":["React","useEffect","Switch","Route","Redirect","connect","createStructuredSelector","HomePage","ShopPage","SignInAndSignUpPage","CheckoutPage","Header","selectCurrentUser","checkUserSession","App","props","currentUser","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,QAAxB,QAAwC,kBAAxC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,OAAO,WAAP;AAEA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,mBAAP,MAAgC,2DAAhC;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AAEA,OAAOC,MAAP,MAAmB,sCAAnB,C,CAEA;AACA;AAEA;;AACA,SAASC,iBAAT,QAAkC,6BAAlC;AACA,SAASC,gBAAT,QAAiC,2BAAjC;;AAEA,MAAMC,GAAG,GAAG,CAAC;AAAED,EAAAA;AAAF,CAAD,KAA0B;AAEpC;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAZ,EAAAA,SAAS,CAAC,MAAMY,gBAAgB,EAAvB,EAA2B,CAACA,gBAAD,CAA3B,CAAT,CAxBoC,CA0BpC;AACA;AACA;AAEA;AACA;AACA;;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAsB,IAAA,SAAS,EAAEN,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,SAAS,EAAEC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,WAAlB;AAA8B,IAAA,SAAS,EAAEE,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,SAAlB;AAA4B,IAAA,MAAM,EAAE,MAAM,KAAKK,KAAL,CAAWC,WAAX,GAA0B,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA1B,GAAkD,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CAFF,CADF;AAWD,CA7CD;;AA+CA,MAAMC,eAAe,GAAGX,wBAAwB,CAAC;AAC/CU,EAAAA,WAAW,EAAEJ;AADkC,CAAD,CAAhD;;AAIA,MAAMM,kBAAkB,GAAGC,QAAQ,KAAK;AACtC;AACAN,EAAAA,gBAAgB,EAAE,MAAMM,QAAQ,CAACN,gBAAgB,EAAjB;AAFM,CAAL,CAAnC;;AAKA,eAAeR,OAAO,CAACY,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CJ,GAA7C,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport './App.css';\n\nimport HomePage from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop/shop.component';\nimport SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component';\nimport CheckoutPage from './pages/checkout/checkout.component';\n\nimport Header from './components/header/header.component';\n\n// BEFORE SAGAS \n// import { auth, createUserProfileDocument } from './firebase/firebase.utils';\n\n// import { setCurrentUser } from './redux/user/user.actions';\nimport { selectCurrentUser } from './redux/user/user.selectors';\nimport { checkUserSession } from './redux/user/user.actions';\n\nconst App = ({ checkUserSession }) => {\n\n  // unsubsribeFromAuth = null;\n\n  // Using HOOKS - useEffect\n  // componentDidMount() {\n  //   const { checkUserSession } = this.props;\n  //   checkUserSession();\n  // BEFORE SAGAS. SWITCHED TO SAGAS\n  //   const { setCurrentUser } = this.props;\n\n  // WONT BE USING THIS. WE ARE SWITCHING TO SAGAS\n  // this.unsubsribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n  //   if (userAuth) {\n  //     const userRef = await createUserProfileDocument(userAuth);\n\n  //     userRef.onSnapshot(snapShot => {\n  //       setCurrentUser({\n  //         id: snapShot.id,\n  //         ...snapShot.data()\n  //       })\n  //     });\n  // }\n\n  useEffect(() => checkUserSession(), [checkUserSession]);\n\n  //   setCurrentUser(userAuth);\n  // });\n  // }\n\n  // componentWillUnmount() {\n  //   this.unsubsribeFromAuth();\n  // }\n\n  return (\n    <div>\n      <Header />\n      <Switch>\n        <Route exact path='/' component={HomePage} />\n        <Route path='/shop' component={ShopPage} />\n        <Route exact path='/checkout' component={CheckoutPage} />\n        <Route exact path='/signin' render={() => this.props.currentUser ? (<Redirect to='/' />) : (<SignInAndSignUpPage />)} />\n      </Switch>\n    </div>\n  );\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  // setCurrentUser: user => dispatch(setCurrentUser(user))\n  checkUserSession: () => dispatch(checkUserSession())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}