{"ast":null,"code":"var _jsxFileName = \"/home/miso/Documents/Learning_Projects/Complete React Developer in 2020/crwn-clothing/src/components/cart-dropdown/cart-dropdown.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { withRouter } from 'react-router-dom';\nimport CartItem from '../cart-item/cart-item.component';\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\nimport { toggleCartHidden } from '../../redux/cart/cart.actions';\nimport { CartDropdownContainer, CartItemsContainer, CartDropdownButton, EmptyMessageContainer } from './cart-dropdown.styles';\n\nconst CartDropdown = ({\n  items,\n  history,\n  dispatch\n}) => React.createElement(CartDropdownContainer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, React.createElement(CartItemsContainer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, items.length ? items.map(item => React.createElement(CartItem, {\n  key: item.id,\n  item: item,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n})) : React.createElement(EmptyMessageContainer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, \"Your cart is empty\")), React.createElement(CartDropdownButton, {\n  inverted: true,\n  onClick: () => {\n    history.push('/checkout');\n    dispatch(toggleCartHidden());\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, \"GO TO CHECKOUT\"));\n\nconst mapStateToProps = createStructuredSelector({\n  items: selectCartItems\n});\nexport default withRouter(connect(mapStateToProps)(CartDropdown));","map":{"version":3,"sources":["/home/miso/Documents/Learning_Projects/Complete React Developer in 2020/crwn-clothing/src/components/cart-dropdown/cart-dropdown.component.jsx"],"names":["React","connect","createStructuredSelector","withRouter","CartItem","selectCartItems","toggleCartHidden","CartDropdownContainer","CartItemsContainer","CartDropdownButton","EmptyMessageContainer","CartDropdown","items","history","dispatch","length","map","item","id","push","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAOC,QAAP,MAAqB,kCAArB;AACA,SAASC,eAAT,QAAgC,iCAAhC;AACA,SAASC,gBAAT,QAAiC,+BAAjC;AAEA,SACEC,qBADF,EAEEC,kBAFF,EAGEC,kBAHF,EAIEC,qBAJF,QAKO,wBALP;;AAQA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,OAAT;AAAkBC,EAAAA;AAAlB,CAAD,KACnB,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEIF,KAAK,CAACG,MAAN,GACEH,KAAK,CAACI,GAAN,CAAUC,IAAI,IAAI,oBAAC,QAAD;AAAU,EAAA,GAAG,EAAEA,IAAI,CAACC,EAApB;AAAwB,EAAA,IAAI,EAAED,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAlB,CADF,GAEE,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJN,CADF,EAQE,oBAAC,kBAAD;AACE,EAAA,QAAQ,MADV;AAEE,EAAA,OAAO,EAAE,MAAM;AACbJ,IAAAA,OAAO,CAACM,IAAR,CAAa,WAAb;AACAL,IAAAA,QAAQ,CAACR,gBAAgB,EAAjB,CAAR;AACD,GALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF,CADF;;AAkBA,MAAMc,eAAe,GAAGlB,wBAAwB,CAAC;AAC/CU,EAAAA,KAAK,EAAEP;AADwC,CAAD,CAAhD;AAIA,eAAeF,UAAU,CAACF,OAAO,CAACmB,eAAD,CAAP,CAAyBT,YAAzB,CAAD,CAAzB","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { withRouter } from 'react-router-dom';\n\nimport CartItem from '../cart-item/cart-item.component';\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\nimport { toggleCartHidden } from '../../redux/cart/cart.actions';\n\nimport {\n  CartDropdownContainer,\n  CartItemsContainer,\n  CartDropdownButton,\n  EmptyMessageContainer,\n} from './cart-dropdown.styles';\n\n\nconst CartDropdown = ({ items, history, dispatch }) => (\n  <CartDropdownContainer>\n    <CartItemsContainer>\n      {\n        items.length ?\n          items.map(item => <CartItem key={item.id} item={item} />) :\n          <EmptyMessageContainer>Your cart is empty</EmptyMessageContainer>\n      }\n    </CartItemsContainer>\n    <CartDropdownButton\n      inverted\n      onClick={() => {\n        history.push('/checkout');\n        dispatch(toggleCartHidden());\n      }}>GO TO CHECKOUT</CartDropdownButton>\n  </CartDropdownContainer>\n);\n\nconst mapStateToProps = createStructuredSelector({\n  items: selectCartItems\n});\n\nexport default withRouter(connect(mapStateToProps)(CartDropdown));"]},"metadata":{},"sourceType":"module"}