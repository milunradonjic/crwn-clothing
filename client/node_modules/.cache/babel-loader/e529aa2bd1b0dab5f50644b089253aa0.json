{"ast":null,"code":"var _jsxFileName = \"/home/miso/Documents/Learning_Projects/Complete React Developer in 2020/crwn-clothing/src/components/cart-dropdown/cart-dropdown.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { withRouter } from 'react-router-dom';\nimport './cart-dropdown.styles.scss';\nimport CustomButton from '../custom-button/custom-button.component';\nimport CartItem from '../cart-item/cart-item.component';\nimport { selectCartItems, toggleCartHidden } from '../../redux/cart/cart.selectors';\n\nconst CartDropdown = ({\n  items,\n  history\n}) => React.createElement(\"div\", {\n  className: \"cart-dropdown\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"cart-items\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, items.length ? items.map(item => React.createElement(CartItem, {\n  key: item.id,\n  item: item,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n})) : React.createElement(\"span\", {\n  className: \"empty-message\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, \"Your cart is empty\")), React.createElement(CustomButton, {\n  inverted: true,\n  onClick: () => {\n    toggleCartHidden();\n    history.push('/checkout');\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, \"GO TO CHECKOUT\"));\n\nconst mapStateToProps = createStructuredSelector({\n  items: selectCartItems\n});\n\nconst mapDispatchToProps = dispatch => ({\n  toggleCartHidden: () => dispatch(toggleCartHidden())\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CartDropdown));","map":{"version":3,"sources":["/home/miso/Documents/Learning_Projects/Complete React Developer in 2020/crwn-clothing/src/components/cart-dropdown/cart-dropdown.component.jsx"],"names":["React","connect","createStructuredSelector","withRouter","CustomButton","CartItem","selectCartItems","toggleCartHidden","CartDropdown","items","history","length","map","item","id","push","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAGA,OAAO,6BAAP;AAEA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,SAASC,eAAT,EAA0BC,gBAA1B,QAAkD,iCAAlD;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KACnB;AAAK,EAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAK,EAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEID,KAAK,CAACE,MAAN,GACEF,KAAK,CAACG,GAAN,CAAUC,IAAI,IACZ,oBAAC,QAAD;AAAU,EAAA,GAAG,EAAEA,IAAI,CAACC,EAApB;AAAwB,EAAA,IAAI,EAAED,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,GAIE;AAAM,EAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBANN,CADF,EAUE,oBAAC,YAAD;AAAc,EAAA,QAAQ,MAAtB;AAAuB,EAAA,OAAO,EAAE,MAAM;AACpCN,IAAAA,gBAAgB;AAChBG,IAAAA,OAAO,CAACK,IAAR,CAAa,WAAb;AACD,GAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVF,CADF;;AAkBA,MAAMC,eAAe,GAAGd,wBAAwB,CAAC;AAC/CO,EAAAA,KAAK,EAAEH;AADwC,CAAD,CAAhD;;AAIA,MAAMW,kBAAkB,GAAGC,QAAQ,KAAK;AACtCX,EAAAA,gBAAgB,EAAE,MAAMW,QAAQ,CAACX,gBAAgB,EAAjB;AADM,CAAL,CAAnC;;AAIA,eAAeJ,UAAU,CAACF,OAAO,CAACe,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CT,YAA7C,CAAD,CAAzB","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { withRouter } from 'react-router-dom';\n\n\nimport './cart-dropdown.styles.scss';\n\nimport CustomButton from '../custom-button/custom-button.component';\nimport CartItem from '../cart-item/cart-item.component';\nimport { selectCartItems, toggleCartHidden } from '../../redux/cart/cart.selectors';\n\nconst CartDropdown = ({ items, history }) => (\n  <div className=\"cart-dropdown\">\n    <div className=\"cart-items\">\n      {\n        items.length ?\n          items.map(item =>\n            <CartItem key={item.id} item={item} />\n          ) :\n          <span className='empty-message'>Your cart is empty</span>\n      }\n    </div>\n    <CustomButton inverted onClick={() => {\n      toggleCartHidden();\n      history.push('/checkout');\n    }}>GO TO CHECKOUT</CustomButton>\n  </div>\n);\n\nconst mapStateToProps = createStructuredSelector({\n  items: selectCartItems\n});\n\nconst mapDispatchToProps = dispatch => ({\n  toggleCartHidden: () => dispatch(toggleCartHidden())\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CartDropdown));"]},"metadata":{},"sourceType":"module"}