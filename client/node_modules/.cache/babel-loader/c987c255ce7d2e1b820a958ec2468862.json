{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { persistStore } from 'redux-persist';\nimport logger from 'redux-logger'; // import thunk from 'redux-thunk';\n\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from './root-reducer'; // shop saga\n\nimport { fetchCollectionsStart } from './shop/shop.sagas'; // const middlewares = [thunk];\n\nconst sagaMiddleware = createSagaMiddleware(); // it can take a configuration object as param\n\nconst middlewares = [sagaMiddleware];\nsagaMiddleware.run(fetchCollectionsStart);\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\nexport const persistor = persistStore(store);\nexport default {\n  store,\n  persistor\n};","map":{"version":3,"sources":["/home/miso/Documents/Learning_Projects/Complete React Developer in 2020/crwn-clothing/src/redux/store.js"],"names":["createStore","applyMiddleware","persistStore","logger","createSagaMiddleware","rootReducer","fetchCollectionsStart","sagaMiddleware","middlewares","run","process","env","NODE_ENV","push","store","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,YAAT,QAA6B,eAA7B;AAEA,OAAOC,MAAP,MAAmB,cAAnB,C,CACA;;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,WAAP,MAAwB,gBAAxB,C,CAEA;;AACA,SAASC,qBAAT,QAAsC,mBAAtC,C,CAEA;;AAEA,MAAMC,cAAc,GAAGH,oBAAoB,EAA3C,C,CAA+C;;AAE/C,MAAMI,WAAW,GAAG,CAACD,cAAD,CAApB;AAEAA,cAAc,CAACE,GAAf,CAAmBH,qBAAnB;;AAEA,IAAII,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1CJ,EAAAA,WAAW,CAACK,IAAZ,CAAiBV,MAAjB;AACD;;AAED,OAAO,MAAMW,KAAK,GAAGd,WAAW,CAACK,WAAD,EAAcJ,eAAe,CAAC,GAAGO,WAAJ,CAA7B,CAAzB;AAEP,OAAO,MAAMO,SAAS,GAAGb,YAAY,CAACY,KAAD,CAA9B;AAEP,eAAe;AAAEA,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAf","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport { persistStore } from 'redux-persist';\n\nimport logger from 'redux-logger';\n// import thunk from 'redux-thunk';\nimport createSagaMiddleware from 'redux-saga'\n\nimport rootReducer from './root-reducer';\n\n// shop saga\nimport { fetchCollectionsStart } from './shop/shop.sagas';\n\n// const middlewares = [thunk];\n\nconst sagaMiddleware = createSagaMiddleware(); // it can take a configuration object as param\n\nconst middlewares = [sagaMiddleware];\n\nsagaMiddleware.run(fetchCollectionsStart);\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\n\nexport const persistor = persistStore(store);\n\nexport default { store, persistor };"]},"metadata":{},"sourceType":"module"}