{"ast":null,"code":"var _jsxFileName = \"/home/miso/Documents/Learning_Projects/Complete React Developer in 2020/crwn-clothing/client/src/pages/shop/shop.component.jsx\";\nimport React, { useEffect } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container';\nimport CollectionContainer from '../collection/collection.container'; // THUNK WAY\n// import { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\n// SAGA WAY\n\nimport { fetchCollectionsStart } from '../../redux/shop/shop.actions';\n\nconst ShopPage = ({\n  fetchCollectionsStart,\n  match\n}) => {\n  // shorthand for writing contstuctor super call and state\n  // state = {\n  //   loading: true\n  // };\n  // Transfered to using HOOKS - useEffect\n  // componentDidMount() {\n  // THUNK WAY\n  // const { fetchCollectionsStartAsync } = this.props;\n  // fetchCollectionsStartAsync();\n  // SAGA WAY\n  //   const { fetchCollectionsStart } = this.props;\n  //   fetchCollectionsStart();\n  // }\n  useEffect(() => fetchCollectionsStart(), [fetchCollectionsStart]); // render is a method that recives a function whose params are the props that component which will get renderd needs.\n  // <Route path={somePath} render={(props) => <Component prop1={props.prop1}>}\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: `${match.path}`,\n    component: CollectionsOverviewContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: `${match.path}/:collectionId`,\n    component: CollectionContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  // THUNK WAY\n  // fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n  // SAGA WAY\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/home/miso/Documents/Learning_Projects/Complete React Developer in 2020/crwn-clothing/client/src/pages/shop/shop.component.jsx"],"names":["React","useEffect","Route","connect","CollectionsOverviewContainer","CollectionContainer","fetchCollectionsStart","ShopPage","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,4BAAP,MAAyC,sEAAzC;AACA,OAAOC,mBAAP,MAAgC,oCAAhC,C,CAEA;AACA;AAEA;;AACA,SAASC,qBAAT,QAAsC,+BAAtC;;AAGA,MAAMC,QAAQ,GAAG,CAAC;AAAED,EAAAA,qBAAF;AAAyBE,EAAAA;AAAzB,CAAD,KAAsC;AACrD;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEAP,EAAAA,SAAS,CAAC,MAAMK,qBAAqB,EAA5B,EAAgC,CAACA,qBAAD,CAAhC,CAAT,CAjBqD,CAmBrD;AACA;;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAG,GAAEE,KAAK,CAACC,IAAK,EAAjC;AAAoC,IAAA,SAAS,EAAEL,4BAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAG,GAAEI,KAAK,CAACC,IAAK,gBAA3B;AAA4C,IAAA,SAAS,EAAEJ,mBAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAKD,CA1BD;;AA4BA,MAAMK,kBAAkB,GAAGC,QAAQ,KAAK;AACtC;AACA;AAEA;AACAL,EAAAA,qBAAqB,EAAE,MAAMK,QAAQ,CAACL,qBAAqB,EAAtB;AALC,CAAL,CAAnC;;AAQA,eAAeH,OAAO,CAAC,IAAD,EAAOO,kBAAP,CAAP,CAAkCH,QAAlC,CAAf","sourcesContent":["import React, { useEffect } from 'react';\n\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container';\nimport CollectionContainer from '../collection/collection.container';\n\n// THUNK WAY\n// import { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\n\n// SAGA WAY\nimport { fetchCollectionsStart } from '../../redux/shop/shop.actions';\n\n\nconst ShopPage = ({ fetchCollectionsStart, match }) => {\n  // shorthand for writing contstuctor super call and state\n  // state = {\n  //   loading: true\n  // };\n\n  // Transfered to using HOOKS - useEffect\n  // componentDidMount() {\n  // THUNK WAY\n  // const { fetchCollectionsStartAsync } = this.props;\n  // fetchCollectionsStartAsync();\n\n  // SAGA WAY\n  //   const { fetchCollectionsStart } = this.props;\n  //   fetchCollectionsStart();\n  // }\n\n  useEffect(() => fetchCollectionsStart(), [fetchCollectionsStart]);\n\n  // render is a method that recives a function whose params are the props that component which will get renderd needs.\n  // <Route path={somePath} render={(props) => <Component prop1={props.prop1}>}\n  return (\n    <div>\n      <Route exact path={`${match.path}`} component={CollectionsOverviewContainer} />\n      <Route path={`${match.path}/:collectionId`} component={CollectionContainer} />\n    </div >)\n};\n\nconst mapDispatchToProps = dispatch => ({\n  // THUNK WAY\n  // fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n\n  // SAGA WAY\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}