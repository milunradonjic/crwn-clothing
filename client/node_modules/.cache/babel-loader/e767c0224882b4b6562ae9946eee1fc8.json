{"ast":null,"code":"var _jsxFileName = \"/home/miso/Documents/Learning_Projects/Complete React Developer in 2020/crwn-clothing/src/components/with-spinner/with-spinner.component.jsx\";\nimport React from 'react';\nimport { SpinnerContainer, SpinnerOverlay } from './with-spinner.styles'; // This is HOC (Higher Order Comopnent) - it takes a component and returns a component\n\nconst WithSpinner = WrappedComponent => {\n  const Spinner = ({\n    isLoading,\n    ...otherProps\n  }) => {\n    return isLoading ? React.createElement(SpinnerOverlay, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(SpinnerContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    })) : React.createElement(WrappedComponent, Object.assign({}, otherProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }));\n  };\n\n  return Spinner;\n};\n\nexport default WithSpinner;","map":{"version":3,"sources":["/home/miso/Documents/Learning_Projects/Complete React Developer in 2020/crwn-clothing/src/components/with-spinner/with-spinner.component.jsx"],"names":["React","SpinnerContainer","SpinnerOverlay","WithSpinner","WrappedComponent","Spinner","isLoading","otherProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,gBAAT,EAA2BC,cAA3B,QAAiD,uBAAjD,C,CAGA;;AACA,MAAMC,WAAW,GAAGC,gBAAgB,IAAI;AAEtC,QAAMC,OAAO,GAAG,CAAC;AAAEC,IAAAA,SAAF;AAAa,OAAGC;AAAhB,GAAD,KAAkC;AAChD,WAAOD,SAAS,GACd,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADc,GAIX,oBAAC,gBAAD,oBAAsBC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAJL;AAKD,GAND;;AAQA,SAAOF,OAAP;AACD,CAXD;;AAaA,eAAeF,WAAf","sourcesContent":["import React from 'react'\n\nimport { SpinnerContainer, SpinnerOverlay } from './with-spinner.styles';\n\n\n// This is HOC (Higher Order Comopnent) - it takes a component and returns a component\nconst WithSpinner = WrappedComponent => {\n\n  const Spinner = ({ isLoading, ...otherProps }) => {\n    return isLoading ? (\n      <SpinnerOverlay>\n        <SpinnerContainer />\n      </SpinnerOverlay>\n    ) : (<WrappedComponent {...otherProps} />);\n  }\n\n  return Spinner;\n}\n\nexport default WithSpinner; \n"]},"metadata":{},"sourceType":"module"}